void mergsort(vector<int> &arr,int low,int mid,int high){
    vector<int> tmep;
    int left = low;
    int right = mid+1;
    while(left<=mid && right<=high){
        if(arr[left]<=arr[right]){
            tmep.push_back(arr[left]);
            left++;
        }
        else{
            tmep.push_back(arr[right]);
            right++;
        }
    }
    while(left<=mid){
        tmep.push_back(arr[left]);
        left++;
    }
    while(right<=high){
        tmep.push_back(arr[right]);
        right++;
    }
    for(int i = low;i<=high;i++){
        arr[i]=tmep[i-low];
    }
}
void ms(vector<int>&arr,int low,int high){
    if(low==high){
        return;
    }
   int  mid = (low+high)/2;
    ms(arr,low,mid);
    ms(arr,mid+1,high);
    mergsort(arr,low,mid,high);
}
void mergeSort(vector < int > & arr, int n) {
    ms(arr,0,n-1);
    // Write your code here.
}
